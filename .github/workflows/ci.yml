name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ "windows-latest", "ubuntu-latest" ]

    runs-on: ${{matrix.os}}
    
    steps:
    - name: checkout repo
      uses: actions/checkout@v4
      with:
        submodules: true
        lfs: true

    - name: install ninja-build
      uses: ashutoshvarma/setup-ninja@master

    - name: fix broken clang
      if: runner.os == 'Windows'
      run: |
        clang --version
        choco upgrade llvm
         # $env:PATH = ($env:PATH -split ';' | Where-Object { $_ -ne 'C:\Program Files\LLVM\bin' }) -join ';'
        clang --version
        
    - name: install core dependencies
      if: runner.os == 'Linux'
      run: |
        echo "runner os: $RUNNER_OS"
        sudo apt update
        sudo apt install libxi-dev libglx-dev
        
    - name: configure
      run: python ./configure.py --debug
      
    - name: compile
      run: ninja -C build
